# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b_DvXRjXT7HkSpiMjsUcGdj3cArn4n7x
"""

import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Dashboard de Autos", layout="wide")
st.title("üöó Dashboard Interactivo de Autos 2025")

# Subida de archivo CSV
archivo = st.file_uploader("Cars Datasets 2025", type=["csv"])
if archivo is not None:
    df = pd.read_csv(archivo, encoding='latin1')

    # Funci√≥n para limpiar num√©ricos
    def extract_numeric(value):
        if isinstance(value, str):
            value = value.replace(',', '').replace('$', '').replace('km/h', '').replace('hp', '').replace('sec', '')
            if '-' in value:
                parts = value.split('-')
                try:
                    return (float(parts[0]) + float(parts[1])) / 2
                except:
                    return None
            try:
                return float(value)
            except:
                return None
        return value

    # Limpieza
    df['Precio'] = df['Cars Prices'].apply(extract_numeric)
    df['Aceleraci√≥n'] = df['Performance(0 - 100 )KM/H'].apply(extract_numeric)
    df['Caballos'] = df['HorsePower'].apply(extract_numeric)
    df['Velocidad'] = df['Total Speed'].apply(extract_numeric)
    df = df.dropna(subset=['Precio', 'Aceleraci√≥n', 'Caballos'])

    st.subheader("1. Relaci√≥n Precio ‚Äì Aceleraci√≥n ‚Äì Potencia")
    fig1 = px.scatter(
        df, x='Precio', y='Aceleraci√≥n', size='Caballos', color='Fuel Types',
        hover_name='Cars Names',
        title='üí° Relaci√≥n entre Precio, Aceleraci√≥n y Potencia',
        size_max=30
    )
    st.plotly_chart(fig1, use_container_width=True)

    st.subheader("2. Distribuci√≥n de precios por marca")
    fig2 = px.box(df, x='Company Names', y='Precio', color='Company Names', points='all')
    st.plotly_chart(fig2, use_container_width=True)

    st.subheader("3. Promedio de caballos por marca")
    hp_avg = df.groupby('Company Names')['Caballos'].mean().reset_index().sort_values('Caballos', ascending=False)
    fig3 = px.bar(hp_avg, x='Company Names', y='Caballos', color='Caballos')
    st.plotly_chart(fig3, use_container_width=True)

    st.subheader("4. Distribuci√≥n de autos por tipo de combustible")
    fig4 = px.pie(df, names='Fuel Types', hole=0.4)
    st.plotly_chart(fig4, use_container_width=True)

    st.subheader("5. Top 10 autos m√°s r√°pidos")
    top10 = df.sort_values('Aceleraci√≥n').head(10)
    fig5 = px.bar(top10, x='Cars Names', y='Aceleraci√≥n', color='Aceleraci√≥n')
    st.plotly_chart(fig5, use_container_width=True)

    st.subheader("6. Potencia vs Velocidad M√°xima")
    fig6 = px.scatter(
        df, x='Caballos', y='Velocidad', color='Company Names', size='Precio',
        hover_name='Cars Names'
    )
    st.plotly_chart(fig6, use_container_width=True)

else:
    st.warning("Por favor sube un archivo CSV para iniciar el dashboard.")